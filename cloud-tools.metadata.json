{"__symbolic":"module","version":4,"metadata":{"CloudToolsModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":7,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ɵa"}],"imports":[{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":11,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":12,"character":8},{"__symbolic":"reference","module":"ngx-captcha","name":"NgxCaptchaModule","line":13,"character":8}],"exports":[{"__symbolic":"reference","name":"ɵa"}]}]}],"members":{}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"cloud-fields","template":"<ng-container [formGroup]=\"group\">\r\n\t<!-- text field field -->\r\n\t\r\n\t<mat-form-field [appearance]=\"field.appearance || 'standard'\" *ngIf=\"[ 'text', 'password', 'email' ].indexOf( field.type ) != -1\" class=\"example-full-width w-100\">\r\n\t\t<mat-label>{{ field.label }}</mat-label>\r\n\t\t<input [readonly]=\"field.readonly\" [type]=\"field.type\" [formControlName]=\"field.name\" matInput [placeholder]=\"field.label\" [value]=\"field.value ? field.value : ''\">\r\n\t\t<mat-hint *ngIf=\"field.control.valid || field.control.untouched\">{{ field.description }}</mat-hint>\r\n\t\t<mat-error *ngIf=\"field.control.invalid && field.control.touched\">\r\n\t\t\t<span *ngIf=\"field.control.errors.required\">This field is required<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.email\">This field is not a valid email<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.minlength\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.matches\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.number\">this field require a valid number<br></span>\r\n\t\t\t<span *ngFor=\"let error of field?.errors\">{{ error }}<br></span>\r\n\t\t</mat-error>\r\n\t</mat-form-field>\r\n\t\r\n\t<!-- date time field -->\r\n\t\r\n\t<mat-form-field [appearance]=\"field.appearance || 'standard'\" *ngIf=\"field.type == 'datetime'\" class=\"w-100\">\r\n\t\t<mat-label>{{ field.label }}</mat-label>\r\n\t\t<input [readonly]=\"field.readonly\" [formControlName]=\"field.name\" matInput [matDatepicker]=\"picker\" [placeholder]=\"field.label\">\r\n\t\t<mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n\t\t<mat-datepicker #picker startView=\"year\" [startAt]=\"field.data.startDate\"></mat-datepicker>\r\n\t\t<mat-hint *ngIf=\"field.control.valid || field.control.untouched\">{{ field.description }}</mat-hint>\r\n\t\t<mat-error *ngIf=\"field.control.invalid && field.control.touched\">\r\n\t\t\t<span *ngIf=\"field.control.errors.required\">This field is required<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.email\">This field is not a valid email<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.minlength\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.matches\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.number\">this field require a valid number<br></span>\r\n\t\t\t<span *ngFor=\"let error of field?.errors\">{{ error }}<br></span>\r\n\t\t</mat-error>\r\n\t</mat-form-field>\r\n\t\r\n\t<!-- select field -->\r\n\t\r\n\t<mat-form-field [appearance]=\"field.appearance || 'standard'\" *ngIf=\"field.type == 'select'\" class=\"w-100\">\r\n\t\t<mat-label>{{ field.label }}</mat-label>\r\n\t\t<mat-select [formControlName]=\"field.name\" [placeholder]=\"field.label\">\r\n\t\t\t<mat-option *ngFor=\"let option of field.options\" [value]=\"option.value\">\r\n\t\t\t{{ option.label }}\r\n\t\t\t</mat-option>\r\n\t\t</mat-select>\r\n\t\t<mat-hint *ngIf=\"field.control.valid || field.control.untouched\">{{ field.description }}</mat-hint>\r\n\t\t<mat-error *ngIf=\"field.control.invalid && field.control.touched\">\r\n\t\t\t<span *ngIf=\"field.control.errors.required\">This field is required<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.email\">This field is not a valid email<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.minlength\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.matches\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.number\">this field require a valid number<br></span>\r\n\t\t\t<span *ngFor=\"let error of field?.errors\">{{ error }}<br></span>\r\n\t\t</mat-error>\r\n\t</mat-form-field>\r\n\t\r\n\t<mat-form-field [appearance]=\"field.appearance || 'standard'\" *ngIf=\"field.type == 'multiple_select'\" multiple class=\"w-100\">\r\n\t\t<mat-label>{{ field.label }}</mat-label>\r\n\t\t<mat-select [formControlName]=\"field.name\" [placeholder]=\"field.label\">\r\n\t\t\t<mat-option *ngFor=\"let option of field.options\" [value]=\"option.value\">\r\n\t\t\t{{ option.label }}\r\n\t\t\t</mat-option>\r\n\t\t</mat-select>\r\n\t\t<mat-hint *ngIf=\"field.control.valid || field.control.untouched\">{{ field.description }}</mat-hint>\r\n\t\t<mat-error *ngIf=\"field.control.invalid && field.control.touched\">\r\n\t\t\t<span *ngIf=\"field.control.errors.required\">This field is required<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.email\">This field is not a valid email<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.minlength\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.matches\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.number\">this field require a valid number<br></span>\r\n\t\t\t<span *ngFor=\"let error of field?.errors\">{{ error }}<br></span>\r\n\t\t</mat-error>\r\n\t</mat-form-field>\r\n\t\r\n\t<!-- textarea field -->\r\n\t\r\n\t<mat-form-field [appearance]=\"field.appearance || 'standard'\" *ngIf=\"field.type == 'textarea'\" class=\"w-100\">\r\n\t\t<mat-label>{{ field.label }}</mat-label>\r\n\t\t<textarea [formControlName]=\"field.name\" matInput [placeholder]=\"field.label\"></textarea>\r\n\t\t<mat-hint *ngIf=\"field.control.valid || field.control.untouched\">{{ field.description }}</mat-hint>\r\n\t\t<mat-error *ngIf=\"field.control.invalid && field.control.touched\">\r\n\t\t\t<span *ngIf=\"field.control.errors.required\">This field is required<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.email\">This field is not a valid email<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.minlength\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.matches\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.number\">this field require a valid number<br></span>\r\n\t\t\t<span *ngFor=\"let error of field?.errors\">{{ error }}<br></span>\r\n\t\t</mat-error>\r\n\t</mat-form-field>\r\n\t\r\n\t<!-- text field field -->\r\n\t\r\n\t<mat-form-field [appearance]=\"field.appearance || 'standard'\" *ngIf=\"[ 'number' ].indexOf( field.type ) != -1\" class=\"example-full-width w-100\">\r\n\t\t<mat-label>{{ field.label }}</mat-label>\r\n\t\t<input [readonly]=\"field.readonly\" [formControlName]=\"field.name\" matInput type=\"number\" [placeholder]=\"field.label\" [value]=\"field.value ? field.value : ''\">\r\n\t\t<mat-hint *ngIf=\"field.control.valid || field.control.untouched\">{{ field.description }}</mat-hint>\r\n\t\t<mat-error *ngIf=\"field.control.invalid && field.control.touched\">\r\n\t\t\t<span *ngIf=\"field.control.errors.required\">This field is required<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.email\">This field is not a valid email<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.minlength\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.matches\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.number\">this field require a valid number<br></span>\r\n\t\t\t<span *ngFor=\"let error of field?.errors\">{{ error }}<br></span>\r\n\t\t</mat-error>\t\t\r\n\t</mat-form-field>\r\n\r\n\t<!-- switch field -->\r\n\t<ng-container *ngIf=\"[ 'switch' ].indexOf( field.type ) != -1\">\r\n\t\t<mat-slide-toggle [formControlName]=\"field.name\" [checked]=\"field.value\">{{ field.label }}</mat-slide-toggle>\r\n\t\t<mat-error *ngIf=\"field.control.invalid && field.control.touched\">\r\n\t\t\t<br>\r\n\t\t\t<span *ngIf=\"field.control.errors.required\">This field is required<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.email\">This field is not a valid email<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.minlength\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.matches\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.number\">this field require a valid number<br></span>\r\n\t\t\t<span *ngFor=\"let error of field?.errors\">{{ error }}<br></span>\r\n\t\t</mat-error>\r\n\t\t<br>\r\n\t\t<small *ngIf=\"field.control.valid || field.control.untouched\">{{ field.description }}</small>\r\n\t\t<br>\r\n\t\t<br>\r\n\t</ng-container>\r\n\r\n\t<!-- (reset)=\"handleReset()\"\r\n\t(ready)=\"handleReady()\"\r\n\t(load)=\"handleLoad()\"\r\n\t[type]=\"type\"\r\n\t[ngModelOptions]=\"{ standalone: true }\"\r\n\t[badge]=\"badge\"\r\n\t(success)=\"handleSuccess($event)\"-->\r\n\t<!-- recaptcha field -->\r\n\t<ng-container *ngIf=\"[ 'recaptcha' ].includes( field.type )\">\r\n\t\t<ngx-recaptcha2 #captchaElem\r\n\t\t\t[siteKey]=\"field.data.siteKey\"\r\n\t\t\t[useGlobalDomain]=\"false\"\r\n\t\t\ttype=\"image\"\r\n\t\t\t[formControlName]=\"field.name\">\r\n\t\t</ngx-recaptcha2>\r\n\t\t<mat-error *ngIf=\"field.control.invalid && field.control.touched\">\r\n\t\t\t<br>\r\n\t\t\t<span *ngIf=\"field.control.errors.required\">This field is required<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.email\">This field is not a valid email<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.minlength\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.matches\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\r\n\t\t\t<span *ngIf=\"field.control.errors.number\">this field require a valid number<br></span>\r\n\t\t\t<span *ngFor=\"let error of field?.errors\">{{ error }}<br></span>\r\n\t\t</mat-error>\t\r\n\t</ng-container>\r\n\t<!-- button -->\r\n\t<button [type]=\"field.type\" *ngIf=\"[ 'button' ].indexOf( field.type ) !== -1\" (click)=\"field.onClick( group )\" mat-raised-button color=\"primary\">{{ field.label }}</button>\r\n</ng-container>","styles":["mat-form-field{margin-bottom:10px;width:100%}"]}]}],"members":{"field":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":2},"arguments":["field"]}]}],"group":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":2},"arguments":["group"]}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":35,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/material","name":"MatCheckboxModule","line":5,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatDatepickerModule","line":6,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatFormFieldModule","line":7,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatInputModule","line":8,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatRadioModule","line":9,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatSelectModule","line":10,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatSliderModule","line":11,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatSlideToggleModule","line":12,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatMenuModule","line":13,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatSidenavModule","line":14,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatToolbarModule","line":15,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatCardModule","line":16,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatDividerModule","line":17,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatExpansionModule","line":18,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatGridListModule","line":19,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatListModule","line":20,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatTabsModule","line":21,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatButtonModule","line":22,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatIconModule","line":23,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatProgressSpinnerModule","line":24,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatProgressBarModule","line":25,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatRippleModule","line":26,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatDialogModule","line":27,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatSnackBarModule","line":28,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatPaginatorModule","line":29,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatSortModule","line":30,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatTableModule","line":31,"character":4},{"__symbolic":"reference","module":"@angular/material-moment-adapter","name":"MatMomentDateModule","line":32,"character":4}],"exports":[{"__symbolic":"reference","module":"@angular/material","name":"MatCheckboxModule","line":5,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatDatepickerModule","line":6,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatFormFieldModule","line":7,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatInputModule","line":8,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatRadioModule","line":9,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatSelectModule","line":10,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatSliderModule","line":11,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatSlideToggleModule","line":12,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatMenuModule","line":13,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatSidenavModule","line":14,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatToolbarModule","line":15,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatCardModule","line":16,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatDividerModule","line":17,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatExpansionModule","line":18,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatGridListModule","line":19,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatListModule","line":20,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatTabsModule","line":21,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatButtonModule","line":22,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatIconModule","line":23,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatProgressSpinnerModule","line":24,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatProgressBarModule","line":25,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatRippleModule","line":26,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatDialogModule","line":27,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatSnackBarModule","line":28,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatPaginatorModule","line":29,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatSortModule","line":30,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatTableModule","line":31,"character":4},{"__symbolic":"reference","module":"@angular/material-moment-adapter","name":"MatMomentDateModule","line":32,"character":4}]}]}],"members":{}}},"origins":{"CloudToolsModule":"./lib/cloud-tools.module","ɵa":"./lib/components/fields/fields.component","ɵb":"./lib/modules/material.module"},"importAs":"cloud-tools"}